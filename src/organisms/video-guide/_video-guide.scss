@use '../../configurations/mixins' as mixin;
@use '../../configurations/bem' as bem;
@use '../../configurations/config' as config;
@use '../../configurations/variables' as var;
@use '../../configurations/functions' as func;
@use '../../configurations/colors/colors' as colors;
@use '../../configurations/colors/colors-functions' as colorFunc;
@use '../../vendor/grid/breakpoints' as breakpoint;
@use '../../vendor/grid/grid' as grid;
@use '../../vendor/baseline/plumber' as plumber;
@use 'sass:color';

@include mixin.organism(video-guide) {
	flex-direction: column;
	background-color: colors.$color-snow;
	border-radius: var.$border-radius;
	overflow: hidden;

	@include bem.e(inner-wrapper) {
		width: 100%;
		position: relative;
	}

	> figure {
		display: flex;
		overflow: hidden;
		position: relative;
	}

	@include bem.e(video-container) {
		position: relative;
		padding-top: 70vh;
		width: 100%;
		display: flex;
		flex-direction: column;
		justify-content: center;

		@include breakpoint.bp-up(sm) {
			padding-top: 76.25%;
		}

		@include breakpoint.bp-up(md) {
			padding-top: 56.25%;
		}
	}

	@include bem.e(timeline-item) {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		z-index: 1;
		justify-content: center;
		transition: opacity 0.25s ease-out;
		margin: 0;
		padding: 0;

		&:first-child,
		&.is-current {
			opacity: 1;
		}

		&.is-current ~ & {
			opacity: 0;
		}

		img {
			border-radius: 0;
			object-fit: cover;
			object-position: 50% 25%;
			height: 100%;
			width: 100%;
		}

		@include bem.e(text) {
			position: absolute;
			top: 50%;
			left: 0;
			right: 0;
			text-align: center;
			padding-left: func.rhythm(2);
			padding-right: func.rhythm(2);
			transform: translateY(-75%);

			@include breakpoint.bp-up(md) {
				transform: translateY(-50%);
				padding-left: func.rhythm(4);
				padding-right: func.rhythm(4);
			}

			@include breakpoint.bp-up(lg) {
				transform: translateY(-50%);
			}

			@include breakpoint.bp-up(xl) {
				left: func.rhythm(8);
				width: calc(100% - func.rhythm(16));
			}

			@include bem.e(headline) {
				font-family: var.$font-family-bold;
				color: colors.$color-snow;
				text-shadow: 0 0 func.to_rem(50px) rgba(colors.$color-black, 1),
					0 0 func.to_rem(10px) rgba(colors.$color-black, 1),
					func.to_rem(1px) func.to_rem(1px) func.to_rem(2px) rgba(colors.$color-black, 0.6);

				@include plumber.plumber(
					$font-size: 3,
					$line-height: 4,
					$leading-bottom: 1,
					$baseline: var.$headings-baseline
				);

				@include breakpoint.bp-up(sm) {
					@include plumber.plumber(
						$font-size: 4.5,
						$line-height: 5,
						$leading-bottom: 1
					);
				}

				@include breakpoint.bp-up(lg) {
					@include plumber.plumber(
						$font-size: 7,
						$line-height: 8,
						$leading-bottom: 2
					);
				}
			}

			> a {
				font-size: var.$size-base * 1.3;
				font-family: var.$font-family-headings;
				padding: func.rhythm(0.5) func.rhythm(2);
				color: colors.$color-peacock;
				text-decoration: none;
				line-height: 1;
				position: relative;

				&::after {
					content: '';
					position: absolute;
					z-index: -2;
					width: 100%;
					height: 100%;
					background-color: rgba(colors.$color-black, 0.7);
					bottom: 0;
					left: 0;
				}

				&::before {
					content: '';
					position: absolute;
					z-index: -1;
					width: 100%;
					height: 100%;
					background-color: colors.$color-snow;
					bottom: 0;
					left: 0;
					transform-origin: right;
					transform: scaleX(0);
					transition: transform .3s ease-in-out;
				}

				&:hover::before {
					transform-origin: left;
					transform: scaleX(1);
				}
			}
		}
	}

	@include bem.e(video) {
		display: block;
		position: absolute;
		left: auto;
		right: auto;
		bottom: 0;
		z-index: 2;
		width: 150px;
		height: 150px;

		&.is-loading {
			background-image: url("data:image/svg+xml,%3Csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid' class='lds-ring' style='background: none;'%3E%3Ccircle cx='50' cy='50' ng-attr-r='%7B%7Bconfig.radius%7D%7D' ng-attr-stroke='%7B%7Bconfig.base%7D%7D' ng-attr-stroke-width='%7B%7Bconfig.width%7D%7D' fill='none' r='43' stroke='%23a7d8fd' stroke-width='7'%3E%3C/circle%3E%3Ccircle cx='50' cy='50' ng-attr-r='%7B%7Bconfig.radius%7D%7D' ng-attr-stroke='%7B%7Bconfig.stroke%7D%7D' ng-attr-stroke-width='%7B%7Bconfig.innerWidth%7D%7D' ng-attr-stroke-linecap='%7B%7Bconfig.linecap%7D%7D' fill='none' r='43' stroke='%2350b2fc' stroke-width='7' stroke-linecap='square' transform='rotate(27.6965 50 50)'%3E%3CanimateTransform attributeName='transform' type='rotate' calcMode='linear' values='0 50 50;180 50 50;720 50 50' keyTimes='0;0.5;1' dur='2.5s' begin='0s' repeatCount='indefinite'%3E%3C/animateTransform%3E%3Canimate attributeName='stroke-dasharray' calcMode='linear' values='9.42477796076938 179.0707812546182;188.4955592153876 -2.842170943040401e-14;9.42477796076938 179.0707812546182' keyTimes='0;0.5;1' dur='2.5' begin='0s' repeatCount='indefinite'%3E%3C/animate%3E%3C/circle%3E%3C/svg%3E%0A");
			background-repeat: no-repeat;
			background-position: center center;
			background-size: 30% 30%;
		}

		@include breakpoint.bp-up(sm) {
			left: 0;
		}

		@include breakpoint.bp-up(lg) {
			width: 200px;
			height: 200px;
		}

		@include breakpoint.bp-up(xxl) {
			width: 250px;
			height: 250px;
		}
	}

	@include bem.e(controls) {
		background-color: colors.$color-snow;
		display: flex;
		align-items: center;
		justify-content: space-between;
		padding: func.rhythm(2);
		flex-direction: column-reverse;
		overflow: hidden;

		@include breakpoint.bp-up(sm) {
			transform: translateX(0);
		}

		@include breakpoint.bp-up(md) {
			align-items: stretch;
			flex-direction: row;
		}
	}

	@include bem.e(title) {
		line-height: 1;
		margin-top: func.rhythm(1);
	}

	@include bem.e(chapters) {
		width: 100%;
		display: flex;
		flex-direction: column;

		@include bem.e(list) {
			width: 100%;
			height: 100%;
			list-style-type: none;
			margin: 0;
			padding: 0;

			> li {
				display: flex;
				align-items: center;
				background-color: colors.$color-snow;
				font-size: var.$size-medium;
				display: none;
				line-height: 1;

				@include breakpoint.bp-up(md) {
					font-size: var.$size-medium-plus;
				}

				&.is-current-item {
					display: block;
				}
			}
		}

		@include breakpoint.bp-up(md) {
			align-items: stretch;
		}
	}

	@include bem.e(timelineposts) {
		z-index: 2;
		width: 250px;
		min-width: 250px;
		background-color: colors.$color-cyberspace;
		position: relative;
		transform: translateX(100%);
		transition: transform 0.25s ease-out;
		flex-shrink: 0;
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;

		@include breakpoint.bp-up(md) {
			transform: translateX(0);
			position: relative;
			top: auto;
			right: auto;
			bottom: auto;
		}

		@include breakpoint.bp-up(xl) {
			width: 350px;
		}

		&.is-visible {
			transform: translateX(0);
		}

		@include bem.e(list) {
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			overflow-y: auto;

			dt {
				color: colors.$color-snow;
				font-family: var.$font-family-headings;
				padding: func.rhythm(1) func.rhythm(2);

				@include breakpoint.bp-up(md) {
					padding-top: func.rhythm(2);
					padding-bottom: func.rhythm(2);
				}
			}

			dd {
				padding: 0;
				margin: 0;
				display: block;
				border-top: 1px solid color.adjust(colors.$color-cyberspace, $lightness: 10%);
			}
		}

		@include bem.e(link) {
			display: flex;
			padding: func.rhythm(1) func.rhythm(2);
			color: colors.$color-snow;
			text-decoration: none;
			font-size: var.$size-medium;
			position: relative;
			line-height: 1.5;
			border-left: 0 solid colors.$color-peacock;
			transition: all 0.25s ease-out;

			&::after {
				content: attr(data-label);
				display: block;
				background-color: colors.$color-lemon;
				color: colors.$color-cyberspace;
				font-family: var.$font-family-headings;
				padding: func.rhythm(1);
				line-height: 1;
				align-self: flex-end;
				white-space: nowrap;
				border-radius: var.$border-radius;
				transform: translateX(func.rhythm(0.5));
				margin-left: func.rhythm(1);
				overflow: hidden;
				transition: transform 0.25s ease-out;
				transform: scale(0);
				opacity: 0;
			}

			&:hover,
			&:focus,
			&.is-current {
				background-color: color.adjust(colors.$color-cyberspace, $lightness: 10%);

				&::after {
					overflow: visible;
					transform: scale(100%);
					opacity: 1;
				}
			}

			&.is-current {
				font-family: var.$font-family-headings;
				border-left: func.rhythm(1) solid colors.$color-peacock;

				&::after {
					background-color: colors.$color-peacock;
					color: colors.$color-snow;
				}
			}
		}

		@include bem.e(button-navigation) {
			transform: translateX(-100%);
			background-color: colors.$color-cyberspace;
			border-bottom-left-radius: var.$border-radius;

			@include breakpoint.bp-up(md) {
				display: none;
			}

			&.is-toggeled {
				transform: translateX(0) scaleX(-1);
				position: absolute;
				right: func.rhythm(2);
				z-index: 2;
			}
		}
	}

	@include bem.e(buttons) {
		display: flex;
		align-items: center;
	}

	@include bem.e(button) {
		display: flex;
		align-items: center;
		margin: 0 func.rhythm(1);
		padding: 0;
		border: 0;
		background-color: transparent;

		&:disabled,
		&:disabled:focus,
		&:not([class*="play"]):not([class*="subtitles"]):not([class*="chapter"]),
		&:disabled:focus-visible {
			pointer-events: none;
			cursor: not-allowed;

			> svg {
				fill: colors.$color-concrete;
			}
		}

		&:hover {
			> svg {
				fill: colors.$color-peacock;
			}
		}

		@include bem.m(subtitles) {
			&.is-active {
				svg {
					fill: colors.$color-peacock;
				}
			}
		}
	}

	@include bem.e(countdown) {
		font-size: var.$size-medium-plus;
		padding-left: func.rhythm(1);
		padding-right: func.rhythm(1);
	}

	@include bem.e(play-icon) {
		width: var.$icon-size-large * 1.5;
		height: var.$icon-size-large * 1.5;
	}

	@include bem.e(rewind-icon) {
		width: var.$icon-size-large;
		height: var.$icon-size-large;
	}

	@include bem.e(forward-icon) {
		width: var.$icon-size-large;
		height: var.$icon-size-large;
	}

	@include bem.e(subtitles-icon) {
		width: var.$icon-size-large * 1.2;
		height: var.$icon-size-large * 1.2;
	}

	@include bem.e(subtitles) {
		text-align: center;
		width: auto;
		position: absolute;
		bottom: func.rhythm(1);
		right: func.rhythm(1);
		z-index: 3;
		font-family: var.$font-family-headings;
		min-width: 200px;
		max-width: 300px;
		display: none;
		padding: func.rhythm(0.5) func.rhythm(1);
		line-height: 1.7;

		@include breakpoint.bp-up(sm) {
			font-size: var.$size-base;
			padding: func.rhythm(1) func.rhythm(2);
			min-width: 300px;
			max-width: 400px;
		}

		@include breakpoint.bp-up(md) {
			font-size: var.$size-base * 1.5;
			padding: func.rhythm(2) func.rhythm(4);
			min-width: 400px;
			max-width: 600px;
		}

		@include breakpoint.bp-up(lg) {
			font-size: var.$size-base * 1.7;
			min-width: 500px;
			max-width: 700px;
			bottom: func.rhythm(2);
			align-self: flex-end;
			right: func.rhythm(2);
		}

		@include breakpoint.bp-up(xxl) {
			max-width: 800px;
		}

		&.is-visible {
			display: inline-block;

			&:empty {
				display: none;
			}
		}

		> span {
			background-color: rgba(colors.$color-black, 0.8);
			color: colors.$color-snow;
		}
	}

	@include bem.e(button-abort) {
		position: absolute;
		top: func.rhythm(1);
		left: func.rhythm(1);
		flex-grow: 0;
		z-index: 2;
		font-size: var.$size-small;

		@include breakpoint.bp-up(md) {
			font-size: initial;
		}
	}
}
