@charset "UTF-8";
@use "sass:math";
@use "sass:list";
@use '../../configurations/mixins' as mixin;
@use '../../configurations/bem' as bem;
@use '../../configurations/config' as config;
@use '../../configurations/variables' as var;
@use '../../configurations/functions' as func;
@use '../../configurations/colors/colors' as colors;
@use '../../configurations/colors/colors-functions' as colorFunc;
@use '../../vendor/grid/breakpoints' as breakpoint;
@use '../../vendor/grid/grid' as grid;
@use '../../vendor/baseline/plumber' as plumber;

$spacing: func.rhythm(6);

@include mixin.organism(section) {
	position: relative;
	padding: math.div($spacing, 1.5) 0;
	background-color: var(--ash-color);

	@include bem.m(white) {
		padding: $spacing 0;
		background-color: var(--snow-color);

		&::before,
		&::after {
			content: '';
			position: absolute;
			right: 0;
			left: 0;
			height: $spacing;
		}

		&::before {
			top: 0;
			background-image: linear-gradient(to right top, var(--snow-color) 0, var(--snow-color) 50%, var(--ash-color) 50.1%);
		}

		&::after {
			bottom: 0;
			background-image: linear-gradient(to left top, var(--ash-color) 0, var(--ash-color) 50%, var(--snow-color) 50.1%);
		}

		&:last-child {
			&::after {
				display: none;
			}
		}
	}

	@include breakpoint.bp-up(md) {
		padding: math.div($spacing * 1.25, 1.5) 0;

		@include bem.m('white') {
			padding: $spacing * 1.25 0;

			&::before,
			&::after {
				height: $spacing * 1.25;
			}
		}
	}

	@include breakpoint.bp-up(lg) {
		padding: math.div($spacing * 1.5, 1.5) 0;

		@include bem.m('white') {
			padding: $spacing * 1.5 0;

			&::before,
			&::after {
				height: $spacing * 1.5;
			}
		}
	}

	@include breakpoint.bp-up(xl) {
		padding: math.div($spacing * 2, 1.5) 0;

		@include bem.m('white') {
			padding: $spacing * 2 0;

			&::before,
			&::after {
				height: $spacing * 2;
			}
		}
	}

	@include bem.e(content) {
		position: relative;
		z-index: func.z_index(background);

		@include bem.m(peacock) {
			::selection {
				background-color: colors.$color-peacock-light;
			}

			::-moz-selection {
				background-color: colors.$color-peacock-light;
			}
		}

		@include bem.m(jade) {
			::selection {
				background-color: colors.$color-jade-light;
			}

			::-moz-selection {
				background-color: colors.$color-jade-light;
			}
		}

		@include bem.m(rectangle-left) {
			&::after {
				content: '';
				position: absolute;
				top: 0;
				left: 0;
				z-index: 2;
				width: func.to_rem(575px);
				height: func.to_rem(575px);
				transform: translate(calc(-100% - #{func.to_rem(20px)}), -50%) rotate(-20deg);
				transform-origin: right bottom;
				background-color: colors.$color-peacock;
			}

			// Hide in IE11
			*::-ms-backdrop,
			&::after {
				display: none;
			}
		}

		@include bem.m(rectangle-right) {
			&::after {
				content: '';
				position: absolute;
				top: 0;
				right: 0;
				z-index: 2;
				width: func.to_rem(450px);
				height: func.to_rem(166px);
				transform: translate(calc(100% + #{func.to_rem(20px)}), 50%) rotate(20deg);
				transform-origin: left bottom;
				background-color: colors.$color-ruby;
			}

			// Hide in IE11
			*::-ms-backdrop,
			&::after {
				display: none;
			}
		}
	}
}
