@charset "UTF-8";
@use "sass:color";
@use '../../configurations/mixins' as mixin;
@use '../../configurations/extends';
@use '../../utilities/hide';
@use '../../configurations/bem' as bem;
@use '../../configurations/config' as config;
@use '../../configurations/variables' as var;
@use '../../configurations/functions' as func;
@use '../../configurations/colors/colors' as colors;
@use '../../configurations/colors/colors-functions' as colorFunc;
@use '../../vendor/grid/breakpoints' as breakpoint;
@use '../../vendor/grid/grid' as grid;
@use '../../vendor/baseline/plumber' as plumber;

@include mixin.organism(tab-list) {
	overflow: hidden;
	display: flex;
	position: relative;
	z-index: 3;
	margin: 0;
	padding: 0;
	overflow: auto;
	mask-image: linear-gradient(-90deg, rgba(237, 237, 237, 0) 0%, rgba(237, 237, 237, 0) 5%, rgba(237, 237, 237, 1) 10%, rgba(237, 237, 237, 1) 100%);
	mask-repeat: repeat-y;
	mask-position: top right;
	mask-size: 100% func.rhythm(6);

	&::-webkit-scrollbar {
		position: absolute;
		z-index: 2;
		bottom: 0;
		left: 0;
		height: func.rhythm(0.5);
	}

	&::-webkit-scrollbar-track {
		background-color: colors.$color-concrete;
	}

	&::-webkit-scrollbar-thumb {
		background-color: colors.$color-granit;
	}

	&::before {
		@extend %u-visuallyhidden;

		content: var.$namespace;
	}

	&::after {
		content: '';
		display: block;
		position: fixed;
		top: 0;
		right: 0;
		bottom: 0;
		width: func.rhythm(3);
		height: func.rhythm(6);
	}


	@include bem.e(item) {
		display: flex;
		flex: 0 0 auto;
		padding: 0;
		font-size: var.$size-medium;

		+ li {
			margin-left: func.rhythm(1);
		}

		@include breakpoint.bp-up(md) {
			font-size: var.$size-base;
		}
	}

	@include bem.e(link) {
		@extend %normalize-links;

		display: inline-flex;
		position: relative;
		align-items: center;
		padding: func.rhythm(1) func.rhythm(2);
		border-top-left-radius: var.$border-radius;
		border-top-right-radius: var.$border-radius;
		background-color: colors.$color-concrete;
		color: colors.$color-cyberspace;
		text-decoration: none;
		border: 1px solid colors.$color-ash;
		border-bottom: 0;

		&:hover,
		&:focus {
			border-top-left-radius: var.$border-radius;
			border-top-right-radius: var.$border-radius;
			border: 1px solid colors.$color-ash;
			border-bottom: 0;
		}

		&:hover {
			background-color: color.adjust(colors.$color-concrete, $lightness: -5%);
		}

		@include breakpoint.bp-up(md) {
			padding: func.rhythm(1.5) func.rhythm(3);
		}
	}

	[data-tab-active] {
		a {
			background-color: colors.$color-snow;
		}
	}

	@include bem.m(gray) {
		[data-tab-active] {
			a {
				background-color: colors.$color-ash;
				border-color: colors.$color-concrete;
			}
		}
	}
}

@include mixin.organism(tab-panel) {
	position: relative;
	top: -1px;
	z-index: 2;
	padding: func.rhythm(1) func.rhythm(2);
	border-top-right-radius: var.$border-radius;
	border-bottom-right-radius: var.$border-radius;
	border-bottom-left-radius: var.$border-radius;
	background-color: colors.$color-snow;
	border: 1px solid colors.$color-ash;

	&[aria-hidden='true'] {
		display: none;
	}

	&:focus {
		outline: 0;
	}

	@include bem.m(gray) {
		background-color: colors.$color-ash;
		border-color: colors.$color-concrete;
	}

	@include breakpoint.bp-up(md) {
		padding: func.rhythm(2) func.rhythm(3);
	}
}

.no-js {
	@include mixin.organism(tab-list) {
		display: block;
		padding: initial;
		margin: initial;
		list-style-type: disc;

		@include plumber.plumber(
			$leading-bottom: 3
		);

		@include bem.e(item) {
			display: list-item;
			margin-top: func.rhythm(1);
			margin-left: func.rhythm(4);
			padding-top: func.rhythm(0.25);
			padding-bottom: func.rhythm(0.25);
			padding-top: 0;
			padding-left: 0;
		}

		@include bem.e(link) {
			background-color: transparent;
			padding: 0;
			border-radius: 0;

			@extend %link-styles;
		}
	}

	@include mixin.organism(tab-panel) {
		background-color: transparent;
		padding: 0;
	}
}
