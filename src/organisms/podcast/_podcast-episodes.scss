@charset "UTF-8";
@use '../../configurations/mixins' as mixin;
@use '../../configurations/bem' as bem;
@use '../../configurations/config' as config;
@use '../../configurations/variables' as var;
@use '../../configurations/functions' as func;
@use '../../configurations/colors/colors' as colors;
@use '../../configurations/colors/colors-functions' as colorFunc;
@use '../../vendor/grid/breakpoints' as breakpoint;
@use '../../vendor/grid/grid' as grid;
@use '../../vendor/baseline/plumber' as plumber;

@include mixin.organism(podcast-episodes) {

	// Episode
	@include bem.e(episode) {
		justify-content: center;
		margin-right: 0;
		margin-left: 0;
		padding: func.rhythm(2);
		border-radius: var.$border-radius;
		background-color: colors.$color-snow;

		@include breakpoint.bp-up(sm) {
			padding-right: func.rhythm(2);
			padding-left: func.rhythm(2);
		}

		@include breakpoint.bp-up(md) {
			justify-content: flex-start;
		}

		@include breakpoint.bp-up(md) {
			padding: func.rhythm(3);
		}

		@include bem.m(list) {
			margin-bottom: func.rhythm(2);

			@include bem.e(image) {
				display: none;

				@include breakpoint.bp-up(md) {
					display: block;
					width: func.to_rem(170px);
					height: func.to_rem(170px);
				}
			}
		}

		@include bem.m(hero) {
			padding-right: 0;
			padding-left: 0;
			border-radius: 0;
			background-color: transparent;

			@include breakpoint.bp-up(md) {
				flex-direction: row-reverse;
				align-items: center;
			}

			@include bem.e(image) {
				width: func.to_rem(310px);
				height: func.to_rem(310px);
				margin-right: 0;
				margin-left: func.rhythm(4);
			}

			@include bem.e(info) {
				> p {
					overflow: visible;
					text-overflow: inherit;
					white-space: normal;
				}
			}

			@include bem.e(link) {
				pointer-events: none;
			}
		}

		@include bem.e(image) {
			margin-bottom: func.rhythm(2);
			border-radius: var.$border-radius;

			@include breakpoint.bp-down(sm) {
				display: none;
			}

			@include breakpoint.bp-up(sm) {
				display: block;
				width: func.to_rem(255px);
				height: func.to_rem(255px);
				margin-right: func.rhythm(3);
			}
		}

		@include bem.e(meta) {
			display: flex;
			margin-bottom: func.rhythm(1);
		}

		@include bem.e(info) {
			h1 span {
				pointer-events: none;
			}

			h1 svg {
				width: var.$icon-size-large * 1.5;
				height: var.$icon-size-large * 1.5;
			}

			h2 svg {
				width: var.$icon-size-large * 1.2;
				height: var.$icon-size-large * 1.2;
			}

			> p {
				overflow: hidden;
				text-overflow: ellipsis;
				white-space: nowrap;

				@include breakpoint.bp-up(sm-xs) {
					overflow: visible;
					text-overflow: inherit;
					white-space: normal;
				}
			}
		}

		@include bem.e(link) {
			color: colors.$color-cyberspace;
			text-decoration: none;

			&:hover,
			&:focus {
				text-decoration: underline;
			}
		}

		@include bem.e(button) {
			display: flex;
			align-items: center;
			margin: 0 func.rhythm(1);
			padding: 0;
			border: 0;
			background-color: transparent;

			&:hover {
				> svg {
					fill: colors.$color-ruby;
				}
			}

			* {
				pointer-events: none;
			}
		}

		@include bem.e(share) {
			display: flex;
			flex-wrap: wrap;
			align-items: center;
			margin-top: func.rhythm(1);

			@include bem.e(spacer) {
				display: none;
				margin-bottom: func.rhythm(2);

				@include breakpoint.bp-up(lg) {
					display: block;
					margin-right: func.rhythm(2);
					margin-bottom: 0;
					margin-left: func.rhythm(2);
					line-height: 1;
				}
			}

			@include bem.e(list) {
				display: flex;
				flex-basis: 100%;

				> dt {
					margin-right: func.rhythm(2);
				}

				> dd {
					margin-left: 0;
				}

				@include breakpoint.bp-up(lg) {
					flex-basis: auto;
				}
			}
		}

		@include bem.e(listen-link) {
			margin-right: func.rhythm(2);
			color: colors.$color-cyberspace;
		}

		@include bem.e(download-link) {
			display: flex;
			flex-basis: 100%;
			flex-grow: 1;
			margin-bottom: func.rhythm(2);
			color: colors.$color-cyberspace;

			> span {
				font-family: var.$font-family-base;
				font-size: var.$size-base;
				text-decoration: underline;
			}

			> svg {
				transform: translateY(3px);
			}

			@include breakpoint.bp-up(lg) {
				margin-bottom: 0;
			}

			@include breakpoint.bp-up(md) {
				flex-basis: auto;
				flex-grow: 0;
			}
		}

		@include bem.e(download-icon) {
			width: var.$icon-size;
			height: var.$icon-size;
			margin-right: func.rhythm(1);
			padding: 3px;
			border-radius: var.$border-radius;
		}
	}
}

// Track list (Prototype)
@include mixin.organism(podcast-track-list) {
	display: flex;
	flex-direction: column;

	> li {
		display: flex;
		padding: func.rhythm(1) func.rhythm(2);

		+ li {
			border-top: 1px solid colors.$color-concrete;
		}

		> button {
			display: flex;
			align-items: center;
		}
	}
}
