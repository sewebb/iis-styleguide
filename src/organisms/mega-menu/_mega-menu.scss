@charset "UTF-8";
@use "sass:color";
@use '../../configurations/mixins' as mixin;
@use '../../configurations/bem' as bem;
@use '../../configurations/config' as config;
@use '../../configurations/variables' as var;
@use '../../configurations/functions' as func;
@use '../../configurations/colors/colors' as colors;
@use '../../configurations/colors/colors-functions' as colorFunc;
@use '../../vendor/grid/breakpoints' as breakpoint;
@use '../../vendor/grid/grid' as grid;

$border-color: color.adjust(colors.$color-jade, $lightness: -5%);

@include mixin.organism(mega-menu) {
	z-index: z_index(middlegroundImportant);
	padding-right: 0;
	padding-left: 0;
	transition: transform 0.25s ease-out;
	background-color: currentColor;

	&[aria-hidden='true'] {
		display: none;
		transform: translateY(-115%);
	}

	&[aria-hidden='false'] {
		transform: translateY(0);

		+ {
			@include mixin.organism(domain-search) {
				display: none;
			}
		}
	}

	&[tabindex='-1'] {
		a,
		button,
		input {
			visibility: hidden;
		}
	}

	@include bem.e(wrapper) {
		@include breakpoint.bp-down(md) {
			padding-right: func.rhythm(1);
			padding-left: func.rhythm(1);
			border-bottom: 1px solid currentColor;
		}

		@include breakpoint.bp-up(lg) {
			padding-top: func.rhythm(3);
		}
	}

	@include bem.e(column) {
		padding-bottom: func.rhythm(2);

		@include breakpoint.bp-down(md) {
			padding-left: 0;
			padding-right: 0;
			padding-bottom: 0;
		}
	}

	@include bem.e(buttons-list) {
		display: flex;
		align-items: stretch;
		margin: 0;
		padding: 0;
		list-style: none;

		@include bem.e(item) {
			width: 50%;
			flex-grow: 1;
			flex-shrink: 0;
			margin: 0;
			padding: 0;

			& + & {
				border-left: 1px solid currentColor;
			}
		}

		@include bem.e(link) {
			display: flex;
			flex-direction: column;
			align-items: center;
			padding-top: func.rhythm(2);
			padding-bottom: func.rhythm(2);
			text-align: center;
			color: colors.$color-cyberspace;
			text-decoration: none;
			font-family: var.$font-family-headings;
			border: 0;
			background-color: transparent;
			appearance: none;
			width: 100%;
			height: 100%;

			&[aria-expanded='true'] {
				background-color: currentColor;
			}

			svg {
				width: var.$icon-size-large * 1.25;
				height: var.$icon-size-large * 1.25;
				margin-bottom: func.rhythm(1);
				pointer-events: none;
			}

			span {
				pointer-events: none;
			}
		}

		@include breakpoint.bp-up(lg) {
			display: none;
		}
	}

	@include bem.e(search-container) {
		background-color: currentcolor;
		padding-top: func.rhythm(2);
		padding-bottom: func.rhythm(2);

		&[aria-hidden='true'] {
			display: none;
		}
	}

	@include bem.e(topic) {
		display: flex;
		justify-content: space-between;
		align-items: center;
		border-top: 1px solid currentColor;

		@include breakpoint.bp-up(lg) {
			background-color: transparent;
			border-top: 0;
			margin-bottom: func.rhythm(1);
		}
	}

	@include bem.e(topic-button) {
		margin-left: auto;
		align-self: stretch;
		padding-left: func.rhythm(1.5);
		padding-right: func.rhythm(1.5);
		border-left: 1px solid currentColor;

		@include breakpoint.bp-up(lg) {
			display: none;
			pointer-events: none;
		}

		&[aria-expanded='true'] {
			background-color: currentColor;

			svg {
				transform: rotate(-180deg);
			}
		}
	}

	@include bem.e(list) {
		margin-top: 0;
		background-color: currentColor;
		margin-bottom: 0;
		padding-top: 0;
		padding-bottom: 0;

		&[aria-hidden='true'] {
			display: none;
		}

		@include breakpoint.bp-up(lg) {
			margin-top: func.rhythm(1);
			background-color: transparent;
			border-bottom: 0;

			&[aria-hidden='true'] {
				display: initial;
			}
		}

		@include bem.e(topic) {
			margin-top: 0;
			margin-bottom: 0;
			border-bottom: 1px solid currentColor;
			font-family: var.$font-family-headings;

			> a {
				padding: func.rhythm(1) func.rhythm(3.5);
			}

			@include breakpoint.bp-up(lg) {
				margin-top: func.rhythm(2);
				margin-bottom: func.rhythm(0.5);
				padding: func.rhythm(1) func.rhythm(1);
				border-bottom: 0;

				> a {
					padding: 0;
				}
			}
		}

		@include bem.e(item) {
			margin: 0;
			border-bottom: 1px solid currentColor;

			&:last-child {
				border-bottom: 0;
			}

			@include breakpoint.bp-up(lg) {
				padding: func.rhythm(1) func.rhythm(1);
				margin-bottom: func.rhythm(0.5);
				border-bottom: 0;
			}
		}

		@include breakpoint.bp-up(lg) {

			@include bem.e(topic) {
				padding: 0;
				border-bottom: 0;
			}

			@include bem.e(item) {
				margin-bottom: func.rhythm(1);
				padding: 0;
				line-height: 1.3;

				& + & {
					border-top: 0;
				}
			}
		}
	}

	@include bem.e(link) {
		display: inline-flex;
		align-items: baseline;
		width: 100%;
		color: colors.$color-cyberspace;
		text-decoration: none;
		padding: func.rhythm(1) func.rhythm(3.5);

		@include bem.m(sub-level) {
			padding: func.rhythm(1) func.rhythm(5);
		}

		&:hover {
			&:not(span) {
				text-decoration: underline;
			}
		}

		@include breakpoint.bp-up(lg) {
			padding: 0;
		}

		@include bem.m(large) {
			display: block;
			width: 100%;
			padding: func.rhythm(1.5) func.rhythm(2);
			font-family: var.$font-family-headings;
			white-space: nowrap;

			@include breakpoint.bp-up(lg) {
				padding: 0;
				font-size: func.to_rem(23px);
			}
		}

		@include bem.e(icon) {
			width: var.$icon-size-smallest;
			height: var.$icon-size-smallest;
			flex-shrink: 0;
			margin-left: func.rhythm(0.5);
		}
	}

	@include breakpoint.bp-up(lg) {
		padding-bottom: 0;

		@include bem.e(link) {
			@include bem.m(large) {
				padding: 0;
			}
		}
	}

	@include bem.e(search) {
		@include bem.e(wrapper) {
			padding: func.rhythm(2) func.rhythm(1);

			@include breakpoint.bp-up(md) {
				padding: func.rhythm(3) func.rhythm(2);
			}
		}
	}
}
