@charset "UTF-8";
@use "sass:color";
@use '../../configurations/mixins' as mixin;
@use '../../configurations/bem' as bem;
@use '../../configurations/config' as config;
@use '../../configurations/variables' as var;
@use '../../configurations/functions' as func;
@use '../../configurations/colors/colors' as colors;
@use '../../configurations/colors/colors-functions' as colorFunc;
@use '../../vendor/grid/breakpoints' as breakpoint;
@use '../../vendor/grid/grid' as grid;

$border-color: color.adjust(colors.$color-jade, $lightness: -5%);

@include mixin.organism(mega-menu) {
	z-index: func.z_index(middlegroundImportant);
	padding-right: 0;
	padding-left: 0;
	transition: transform 0.25s ease-out;
	background-color: colors.$color-jade-light;

	&[aria-hidden='true'] {
		display: none;
		transform: translateY(-115%);
	}

	&[aria-hidden='false'] {
		transform: translateY(0);

		+ {
			@include mixin.organism(domain-search) {
				display: none;
			}
		}
	}

	&[tabindex='-1'] {
		a,
		button,
		input {
			visibility: hidden;
		}
	}

	@include bem.e(wrapper) {
		padding-top: func.rhythm(3);

		@include breakpoint.bp-down(md) {
			padding-right: func.rhythm(1);
			padding-left: func.rhythm(1);
		}
	}

	@include bem.e(list) {
		margin-top: func.rhythm(1);

		@include bem.e(topic) {
			margin-top: func.rhythm(2);
			margin-bottom: func.rhythm(0.5);
			padding: func.rhythm(1) func.rhythm(1);
			border-bottom: 1px solid $border-color;
			font-family: var.$font-family-headings;

			&:first-child {
				margin-top: 0;
			}
		}

		@include bem.e(item) {
			margin: 0 0 func.rhythm(0.5) 0;
			padding: func.rhythm(1) func.rhythm(1);

			& + & {
				border-top: 1px solid $border-color;
			}
		}

		@include breakpoint.bp-up(lg) {

			@include bem.e(topic) {
				padding: 0;
				border-bottom: 0;
			}

			@include bem.e(item) {
				margin-bottom: func.rhythm(1);
				padding: 0;
				line-height: 1.3;

				& + & {
					border-top: 0;
				}
			}
		}
	}

	@include bem.e(link) {
		display: inline-flex;
		align-items: baseline;
		color: colors.$color-cyberspace;
		text-decoration: none;

		&:hover {
			&:not(span) {
				text-decoration: underline;
			}
		}

		@include bem.m(large) {
			display: block;
			padding: 0 func.rhythm(1);
			font-family: var.$font-family-headings;
			font-size: func.to_rem(23px);
			white-space: nowrap;

			@include breakpoint.bp-up(lg) {
				padding: 0;
			}
		}

		@include bem.e(icon) {
			width: var.$icon-size-smallest;
			height: var.$icon-size-smallest;
			flex-shrink: 0;
			margin-left: func.rhythm(0.5);
		}
	}

	@include breakpoint.bp-up(lg) {
		padding-bottom: 0;

		@include bem.e(link) {
			@include bem.m(large) {
				padding: 0;
			}
		}
	}

	@include bem.e(search) {
		@include bem.e(wrapper) {
			padding: func.rhythm(2) func.rhythm(1);

			@include breakpoint.bp-up(md) {
				padding: func.rhythm(3) func.rhythm(2);
			}
		}
	}
}
