@charset "UTF-8";
@use '../../configurations/mixins' as mixin;
@use '../../configurations/typography/typography';
@use '../../configurations/bem' as bem;
@use '../../configurations/config' as config;
@use '../../configurations/variables' as var;
@use '../../configurations/functions' as func;
@use '../../configurations/colors/colors' as colors;
@use '../../configurations/colors/colors-functions' as colorFunc;
@use '../../vendor/grid/breakpoints' as breakpoint;
@use '../../vendor/grid/grid' as grid;
@use '../../vendor/baseline/plumber' as plumber;

@include mixin.organism(service-product-list) {
	list-style: none;
	margin: 0 0 func.rhythm(2) 0;
	padding: 0;

	@include bem.e(item) {
		display: flex;
		flex-direction: column;
		padding: func.rhythm(3) func.rhythm(2);

		& + & {
			border-top: 1px solid colors.$color-concrete;
		}

		@include breakpoint.bp-up(sm) {
			padding-top: func.rhythm(2);
			padding-bottom: func.rhythm(2);
			flex-direction: row;
			align-items: center;
		}
	}

	@include bem.e(logo) {
		flex-shrink: 0;

		@include bem.e(image) {
			width: 100px;
			height: auto;
			margin-right: func.rhythm(4);
			margin-bottom: func.rhythm(1);

			@include breakpoint.bp-up(sm) {
				margin-bottom: 0;
			}
		}
	}

	@include bem.e(data) {
		@include bem.e(list) {
			list-style: none;
			margin: 0;
			padding: 0;

			dt, dd {
				margin: 0;
				padding: 0;
			}

			dt {
				@extend %beta;
			}

			dd {
				max-width: calc(#{func.to_rem(612px)} + #{(var.$indent * 2)});
			}
		}
	}
}
