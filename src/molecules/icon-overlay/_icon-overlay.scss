@charset "UTF-8";
@use '../../configurations/mixins' as mixin;
@use '../../configurations/bem' as bem;
@use '../../configurations/config' as config;
@use '../../configurations/variables' as var;
@use '../../configurations/colors/colors' as colors;
@use '../../configurations/colors/colors-functions' as colorFunc;
@use '../../vendor/grid/breakpoints' as breakpoint;
@use '../../vendor/grid/grid' as grid;

@include mixin.molecule(icon-overlay) {
	position: relative;
	width: 100%;
	overflow: hidden;
	border-radius: var.$border-radius;

	> img {
		display: block;
		width: 100%;
		object-fit: cover;
		object-position: 50% center;
		min-height: 100%;
	}

	img {
		position: relative;
		z-index: 2;
	}

	iframe {
		position: absolute;
		z-index: 1;
		top: 0;
		left: 0;
	}

	@include bem.e(button) {
		position: absolute;
		z-index: 3;
		top: 50%;
		left: 50%;
		width: rhythm(7);
		height: rhythm(7);
		padding: 0;
		transform: translateX(-50%) translateY(-50%);
		border: 0;
		background-color: transparent;

		&:hover,
		&:focus {
			> svg {
				fill: colors.$color-concrete;
			}
		}

		@include breakpoint.bp-up(sm) {
			width: rhythm(10);
			height: rhythm(10);
		}
	}

	@include bem.e(icon) {
		width: rhythm(7);
		height: rhythm(7);
		fill: colors.$color-snow;
		filter: drop-shadow(5px 5px 5px rgba(0, 0, 0, 0.4));
		cursor: pointer;

		@include breakpoint.bp-up(sm) {
			width: rhythm(10);
			height: rhythm(10);
		}
	}

	@include bem.e(message) {
		display: flex;
		flex-direction: column;
		position: absolute;
		z-index: 4;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		align-items: center;
		justify-content: center;
		text-align: center;
		background: colors.$color-concrete;
		padding-left: rhythm(2);
		padding-right: rhythm(2);
	}
}
