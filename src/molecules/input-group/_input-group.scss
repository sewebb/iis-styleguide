@charset "UTF-8";
@use '../../configurations/mixins' as mixin;
@use '../../configurations/bem' as bem;
@use '../../configurations/config' as config;
@use '../../configurations/variables' as var;
@use '../../configurations/functions' as func;
@use '../../configurations/colors/colors' as colors;
@use '../../configurations/colors/colors-functions' as colorFunc;
@use '../../vendor/grid/breakpoints' as breakpoint;
@use '../../vendor/grid/grid' as grid;


@include mixin.molecule(input-group) {
	display: flex;
	align-items: stretch;

	@include bem.e(label) {
		display: flex;
		align-items: center;
		padding: 0 func.rhythm(1);
		background: colors.$color-concrete;
		border: 1px solid colors.$color-granit;
		font-size: func.to_rem(16px);

		&:first-child {
			border-radius: var.$border-radius 0 0 var.$border-radius;
			border-right: none;
		}

		&:last-child {
			border-radius: 0 var.$border-radius var.$border-radius 0;
			border-left: none;
		}

		&:not(:first-child):not(:last-child) {
			border-left: none;
			border-right: none;
		}
	}

	@include mixin.atom(input) {
		&:first-child {
			border-radius: var.$border-radius 0 0 var.$border-radius;
		}

		&:last-child {
			border-radius: 0 var.$border-radius var.$border-radius 0;
		}

		&:not(:first-child):not(:last-child) {
			border-radius: 0;
		}
	}
}
