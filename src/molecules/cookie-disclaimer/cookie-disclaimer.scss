@charset "UTF-8";
@use '../../configurations/mixins' as mixin;
@use '../../configurations/bem' as bem;
@use '../../configurations/config' as config;
@use '../../configurations/variables' as var;
@use '../../configurations/functions' as func;
@use '../../configurations/colors/colors' as colors;
@use '../../configurations/colors/colors-functions' as colorFunc;
@use '../../vendor/grid/breakpoints' as breakpoint;
@use '../../vendor/grid/grid' as grid;

@include mixin.molecule(cookie-disclaimer) {
	display: none;
	position: relative;
	z-index: func.z_index(foreground);

	&.is-visible {
		display: block;
	}

	@include breakpoint.bp-up(lg) {
		position: fixed;
		right: 0;
		bottom: 0;
		left: 0;
	}

	@include bem.e(wrapper) {
		width: 100%;
		margin-bottom: 0 !important;
		padding: func.rhythm(2) 0;
	}

	@include bem.e(inner) {
		display: flex;
		flex-wrap: wrap;
		margin-right: auto;
		margin-left: auto;

		@include grid.make-container-max-widths();

		@include breakpoint.bp-down(xl) {
			padding-right: var.$grid-gutter-width;
			padding-left: var.$grid-gutter-width;
		}
	}

	@include bem.e(inner-first) {
		display: flex;
		align-items: center;
		width: 100%;

		a {
			padding: 0 0.25rem;
			border-bottom: 0.11111rem solid colors.$color-peacock;
			color: colors.$color-black;
			text-decoration: none;

			&:hover,
			&:focus {
				text-decoration: none;
			}
		}

		@include breakpoint.bp-up(md) {
			@include grid.make-col(12);

			padding-right: func.rhythm(3);
		}
	}

	@include bem.e(inner-second) {
		display: flex;
		align-items: center;
		justify-content: flex-end;
		width: 100%;
		padding-top: func.rhythm(2);

		button {
			font-size: 18px;
		}

		@include breakpoint.bp-up(md) {
			@include grid.make-col(6);

			padding-top: 0;
		}
	}

	@include bem.e(text) {
		margin-bottom: 0;
	}
}
