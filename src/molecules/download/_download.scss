@charset "UTF-8";
@use '../../configurations/mixins' as mixin;
@use '../../configurations/bem' as bem;
@use '../../configurations/config' as config;
@use '../../configurations/variables' as var;
@use '../../configurations/functions' as func;
@use '../../configurations/colors/colors' as colors;
@use '../../configurations/colors/colors-functions' as colorFunc;
@use '../../vendor/grid/breakpoints' as breakpoint;

@include mixin.molecule(download) {
	position: relative;
	padding: func.rhythm(2.5);
	border: 1px solid colors.$color-peacock;
	border-radius: var.$border-radius;
	background-color: var(--snow-color);

	@include bem.e(link) {
		display: block;
		margin-bottom: func.rhythm(1);
		color: currentcolor;
		text-decoration: none;

		&:hover,
		&:focus {
			color: colors.$color-peacock;
			text-decoration: underline;
		}

		&::after {
			content: '';
			display: block;
			position: absolute;
			z-index: func.z_index(background);
			top: 0;
			right: 0;
			bottom: 0;
			left: 0;
		}
	}

	@include bem.e(icon-file) {
		margin-bottom: func.rhythm(1);
		line-height: 0;

		@include breakpoint.bp-up(sm) {
			margin-right: func.rhythm(0.5);
			margin-bottom: 0;
		}
	}

	@include bem.e(icon-download) {
		display: flex;
		align-items: center;
		justify-content: center;
		width: func.rhythm(3.5);
		height: func.rhythm(3.5);
		margin-left: func.rhythm(1);
		border-radius: var.$border-radius;
		background-color: colors.$color-peacock-light;
	}

	@include bem.e(text) {
		white-space: nowrap;
	}

	@include bem.b(icon) {
		width: func.to_rem(57px);
		height: func.to_rem(78px);
		color: var(--cyberspace-color);
		fill: currentColor;
	}

	@include bem.e(trigger) {
		margin-top: func.rhythm(1);
		margin-left: 0;

		@include bem.b(icon) {
			width: var.$icon-size-medium;
			height: var.$icon-size-medium;
			color: var(--dark-color);
			fill: currentColor;
		}

		@include breakpoint.bp-up(sm) {
			margin-top: 0;
			margin-left: func.rhythm(1);
		}
	}
}
