@charset "UTF-8";
@use '../configurations/variables' as var;
@use '../configurations/functions' as func;@use '../configurations/colors/colors' as colors;
@use '../configurations/bem' as bem;
@use '../configurations/colors/colors-functions' as colorFunc;

/* Force normalize links */
.u-link-normal,
.u-link-normal * {
	padding: 0 !important;
	border: 0 !important;
	border-radius: 0 !important;
	word-wrap: normal !important;
	word-break: normal !important;
	hyphens: none !important;
	overflow-wrap: normal !important;

	&:hover,
	&:focus {
		border: 0 !important;
		border-radius: 0 !important;
		background-color: transparent !important;
		text-decoration: underline !important;
	}
}

/* Force body text link link-styles */
.u-link {
	padding: func.rhythm(0) func.rhythm(0.5) !important;
	border-bottom: func.to_rem(2px) solid colors.$color-peacock !important;
	color: var(--cyberspace-color) !important;
	text-decoration: none !important;

	&:hover,
	&:focus {
		border-bottom: func.to_rem(2px) solid colors.$color-ocean-light !important;
		border-radius: var.$border-radius !important;
		background-color: colors.$color-ocean-light !important;
	}

	&[href^='mailto'] {
		hyphens: none !important;
	}

	@include bem.m(light) {
		color: colors.$color-snow !important;

		&:hover,
		&:focus {
			color: colors.$color-cyberspace !important;
		}
	}
}

/* Create linked box (requires parent box to have position:relative) */
.u-link-area {
	color: colors.$color-cyberspace !important;
	text-decoration: none !important;

	&::after {
		content: '';
		display: block;
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		cursor: pointer;
	}

	&:hover,
	&:focus {
		color: colors.$color-ruby !important;
		text-decoration: underline !important;
	}
}

.u-icon-list-link {
	padding: 0;
	border-bottom: 0;
	color: colors.$color-cyberspace;
	text-decoration: none;

	&:hover,
	&:focus {
		border-radius: var.$border-radius;
		background-color: colors.$color-ocean-light;
	}

	@include bem.m(current) {
		color: colors.$color-ruby;
		text-decoration: underline;
	}
}

// Generate parent element link color classes e.g. .u-color-ruby a
/// @group Colors
.u-link-color {
	@include colorFunc.color_classes (
		$map: colorFunc.$colors,
		$separator: '-',
		$attribute: 'color',
		$element: 'a'
	);
}
