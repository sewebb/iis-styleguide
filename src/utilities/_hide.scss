@charset "UTF-8";
@use '../configurations/mixins' as mixin;
@use '../vendor/grid/breakpoints' as breakpoint;

// Hide visually but not for screen readers
/// @group Utilities
%u-visuallyhidden,
.u-visuallyhidden {
	@include mixin.visuallyhidden;
}

// Hide on certain breakpoint
/// @group Utilities
@mixin hide-on-screen-width($bp) {
	@include breakpoint.bp-down($bp) {
		@include mixin.visuallyhidden;
	}
}

// Hide for all
/// @group Utilities
.is-hidden {
	display: none !important;
}

// Hide on mobile
/// @group Utilities
.u-hidden-mobile {
	@include breakpoint.bp-down(lg) {
		display: none !important;
	}
}

// Visibility-hidden
.u-visibility-hidden {
	visibility: hidden !important;
}

.u-hide-xs {
	@include breakpoint.bp-down(xs) {
		display: none !important;
	}
}

.u-hide-sm-xs {
	@include breakpoint.bp-down(sm-xs) {
		display: none !important;
	}
}

.u-hide-sm {
	@include breakpoint.bp-down(sm) {
		display: none !important;
	}
}

.u-hide-md {
	@include breakpoint.bp-down(md) {
		display: none !important;
	}
}

.u-hide-lg {
	@include breakpoint.bp-down(lg) {
		display: none !important;
	}
}

.u-hide-xs-up {
	@include breakpoint.bp-up(xs) {
		display: none !important;
	}
}

.u-hide-sm-up {
	@include breakpoint.bp-up(sm) {
		display: none !important;
	}
}

.u-hide-md-up {
	@include breakpoint.bp-up(md) {
		display: none !important;
	}
}

.u-hide-lg-up {
	@include breakpoint.bp-up(lg) {
		display: none !important;
	}
}

.u-hide-xl-up {
	@include breakpoint.bp-up(xl) {
		display: none !important;
	}
}

.u-overflow-hidden {
	overflow: hidden !important;
}

.u-overflow-visible {
	overflow: visible !important;
}

.u-hide-empty {
	&:empty {
		display: none !important;
	}
}

.u-aria-hidden[aria-hidden='true'] {
	display: none !important;
}
