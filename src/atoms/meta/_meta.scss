@charset "UTF-8";
@use '../../configurations/variables' as v;
@use '../../configurations/mixins' as m;
@use '../../configurations/bem' as m2;
@use '../../configurations/functions' as f;
@use '../../configurations/colors/colors' as c;
@use '../../configurations/colors/colors-functions' as cf;
@use '../../vendor/baseline/plumber' as p;
@use '../../vendor/grid/breakpoints' as bp;

@include m.atom(meta) {
	display: flex;
	position: relative;
	align-items: center;
	color: var(--cyberspace-color);
	font-family: v.$font-family-mono;
	text-decoratiosn: none;
	text-transform: uppercase;
	white-space: nowrap;

	@include p.plumber(
		$font-size: 1.7,
		$baseline: v.$mono-baseline,
		$leading-bottom: 0
	);

	@include cf.color_values(cf.$colors, 'fill', $prefix: '--', $separator: '-');

	span {
		margin-left: f.to_rem(3px);
	}

	@include m2.b(icon) {
		display: flex;
		flex-shrink: 0;
		align-items: center;
		width: v.$icon-size;
		height: v.$icon-size;
		margin-right: rhythm(1);
		fill: inherit;
		color: var(--color-cyberspace);
		fill: currentColor;
	}

	@include m2.m(light) {
		color: c.$color-snow;

		@include m2.b(icon) {
			fill: c.$color-snow;
		}
	}

	@include m2.m(lowercase) {
		text-transform: initial;
	}

	@include m2.m(wrap) {
		white-space: normal;
	}

	@include m2.m(responsive) {
		@include p.plumber(
			$font-size: 1.4,
			$baseline: v.$mono-baseline,
			$leading-bottom: 0
		);

		@include bp.bp-up(md) {
			@include p.plumber(
				$font-size: 1.6,
				$baseline: v.$mono-baseline,
				$leading-bottom: 0
			);
		}

		@include bp.bp-up(lg) {
			@include p.plumber(
				$font-size: 1.7,
				$baseline:v.$mono-baseline,
				$leading-bottom: 0
			);
		}
	}
}
