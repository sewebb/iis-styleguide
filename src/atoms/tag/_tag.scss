@charset "UTF-8";
@use '../../configurations/mixins' as mixin;
@use '../../configurations/bem' as bem;
@use '../../configurations/variables' as var;
@use '../../configurations/colors/colors' as colors;
@use '../../configurations/colors/colors-functions' as colorFunc;

/// @group Tags
@include mixin.atom(tag) {
	@extend %normalize-links;

	@extend %tag;

	display: inline-flex;
	align-items: center;
	position: relative;
	z-index: z_index(middleground);
	margin-right: rhythm(1);
	margin-bottom: rhythm(1);
	padding: rhythm(1) rhythm(2);
	font-size: var.$small-text;
	line-height: 1;
	text-decoration: none;
	text-transform: uppercase;

	&--background {
		@include colorFunc.color_values(colorFunc.$colors, 'background-color', $separator: '-');
		@include colorFunc.color_values(colorFunc.$colors, 'border-color', $separator: '-');
	}

	@include bem.e(text) {
		color: var(--cyberspace-color);
		letter-spacing: 0.025rem;
	}

	@include bem.m(light) {
		@extend %tag-light;

		@include bem.e(text) {
			color: colors.$color-snow;
		}
	}

	> svg {
		width: var.$icon-size-small;
		height: var.$icon-size-small;
	}

	@include bem.m(hover-light) {
		&:hover,
		&:focus {
			background-color: currentColor !important;

			[class*=text] {
				color: colors.$color-snow;
			}
		}
	}

	@include bem.m(hover-dark) {
		&:hover,
		&:focus {
			background-color: currentColor !important;

			[class*=text] {
				color: colors.$color-cyberspace;
			}
		}
	}
}
